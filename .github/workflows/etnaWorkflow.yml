name: Etna CI CD
on: 
  pull_request: null
  push:
    branches:
    - feature/*

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  Build:
    runs-on: ubuntu-latest
    container: dawidblom/etna:latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Build
      run: scripts/Build.sh  
    - name: Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: Etna.elf
        path: build/Release/source/
      
  #Test:
  #  runs-on: ubuntu-latest
  #  container: dawidblom/etna:latest       
  #  steps:
  #  - name: Checkout Code
  #    uses: actions/checkout@v3

    #- name: Static Code Analysis
      #run: scripts/StaticCodeAnalysis.sh

    #- name: Unit Tests
      #run: |
      #  scripts/UnitTests.sh 
      #env:
      #  CPPUTEST_HOME: ${{ vars.CPPUTEST_HOME }}

    #- name: Code Coverage
    #  run: |
    #    scripts/CodeCoverage.sh
    #  env: 
    #    CPPUTEST_HOME: ${{ vars.CPPUTEST_HOME }}
    #- name: Publish Report
    #  uses: cpina/github-action-push-to-another-repository@main
    #  env:
    #    SSH_DEPLOY_KEY: ${{ secrets.SSH_COVERAGE_PAGES }}
    #    API_TOKEN_GITHUB: ${{ secrets.COVERAGE_REPO_DEPLOY_KEY }}
    #  with:
    #    source-directory: 'build/codeCoverage/html'
    #    destination-github-username: 'DJBlom'
    #    destination-repository-name: 'Coverage'
    #    user-email: dawidjblom@gmail.com
    #    target-branch: main

      
        


     
  HILTesting:
    runs-on: ubuntu-latest
    container: dawidblom/etna:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download Binary
        uses: actions/download-artifact@v3
        with:
         name: Etna.elf  
        env:
          TTY: /dev/ttyAMC0
      - name: Flash Firmware
        run: scripts/FlashCode.sh


    
    
